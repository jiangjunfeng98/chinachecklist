---
import '../styles/global.css';

interface Props {
  title?: string | undefined;
  description?: string | undefined;
}

const {
  title = 'ChinaSupport - Your China Concierge',
  description = "Discover China-Support, your one-stop solution for all services within China. We're dedicated to solving every challenge, providing tailored assistance, and ensuring seamless business operations across the country. Trust our expertise to navigate the complexities of Chinese markets and achieve your goals with ease"
} = Astro.props;
---

<meta charset="UTF-8" />
<meta name="description" property="og:description" content={description} />
<meta name="viewport" content="width=device-width" />
<meta name="generator" content={Astro.generator} />
<title>{title}</title>

<script is:inline>
  // This code is inlined in the head to make dark mode instant & blocking.
  const getThemePreference = () => {
    if (typeof localStorage !== 'undefined' && localStorage.getItem('theme')) {
      return localStorage.getItem('theme');
    }
    return window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light';
  };
  const isDark = getThemePreference() === 'dark';
  document.documentElement.classList[isDark ? 'add' : 'remove']('theme-dark');

  if (typeof localStorage !== 'undefined') {
    // Watch the document element and persist user preference when it changes.
    const observer = new MutationObserver(() => {
      const isDark = document.documentElement.classList.contains('theme-dark');
      localStorage.setItem('theme', isDark ? 'dark' : 'light');
    });
    observer.observe(document.documentElement, {
      attributes: true,
      attributeFilter: ['class']
    });
  }
</script>
